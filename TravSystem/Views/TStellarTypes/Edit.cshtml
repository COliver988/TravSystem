@model TravSystem.Models.TStellarTypes

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>TStellarTypes</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <input asp-for="Type" class="form-control" />
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Size" class="control-label"></label>
                <input asp-for="Size" class="form-control" />
                <span asp-validation-for="Size" class="text-danger"></span>
            </div>
            <h4>Stellar Zones</h4>
            <div id="stellarZonesContainer">
                @for (int i = 0; i < (Model?.StellarZones?.Count ?? 0); i++)
                {
                    <div class="stellarzone-editor">
                        <input type="hidden" name="StellarZones.Index" value="@i" />
                        <partial name="_StellarZoneEditor" model="Model.StellarZones[i]" />
                    </div>
                }
            </div>
            <button type="button" class="btn btn-secondary" id="addZoneBtn">Add Stellar Zone</button>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@{
    // List of BAMKGF star types
    var starTypes = new[] { "B0", "B5", "A0", "A5", "F0", "F5", "G0", "G5", "K0", "K5", " M0", "M5", "M9" };
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
<script>
    let zoneIndex = @(Model?.StellarZones?.Count ?? 0);
    document.getElementById('addZoneBtn').addEventListener('click', function () {
        const container = document.getElementById('stellarZonesContainer');
        const template = `
            <div class="stellarzone-editor form-row d-flex align-items-center mb-2">
                <input type="hidden" name="StellarZones.Index" value="${zoneIndex}" />
                <div class="col-auto">
                    <label for="StellarZones_${zoneIndex}__StarType" class="sr-only">Star Type</label>
                    <select name="StellarZones[${zoneIndex}].StarType" class="form-control" style="min-width: 90px;">
                        <option value="">Select Star Type</option>
                        ${["B0", "B5", "A0", "A5", "F0", "F5", "G0", "G5", "K0", "K5", "M0", "M5", "M9"].map(type => `<option value="${type}">${type}</option>`).join("")}
                    </select>
                </div>
                <div class="col-auto">
                    <label for="StellarZones_${zoneIndex}__Zone" class="sr-only">Zone</label>
                    <input class="form-control" type="text" name="StellarZones[${zoneIndex}].Zone" placeholder="Zone (I/H/O)" style="min-width: 90px;" />
                </div>
                <div class="col-auto">
                    <label for="StellarZones_${zoneIndex}__Orbit" class="sr-only">Orbit</label>
                    <input class="form-control" type="text" name="StellarZones[${zoneIndex}].Orbit" placeholder="Orbit" style="min-width: 90px;" />
                </div>
            </div>
        `;
        container.insertAdjacentHTML('beforeend', template);
        zoneIndex++;
    });
    </script>
}
